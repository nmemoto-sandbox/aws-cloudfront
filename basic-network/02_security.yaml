AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VPCStackName:
    Type: String
    Default: myteststack
Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: ALB-SG
      GroupDescription: "Security Group for Application Load Balancer"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ALB-SG
      VpcId: { "Fn::ImportValue": !Sub "${VPCStackName}-VPC" }
  APPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: APP-SG
      GroupDescription: "Security Group for Web & Application Server"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        SourceSecurityGroupId: !Ref ALBSecurityGroup
      Tags:
        - Key: Name
          Value: APP-SG
      VpcId: { "Fn::ImportValue": !Sub "${VPCStackName}-VPC" }
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: DB-SG
      GroupDescription: "Security Group for DB Server"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '5432'
        ToPort: '5432'
        SourceSecurityGroupId: !Ref APPSecurityGroup
      Tags:
        - Key: Name
          Value: DB-SG
      VpcId: { "Fn::ImportValue": !Sub "${VPCStackName}-VPC" }
Outputs:
  ALBSecurityGroup:
    Value: !Ref ALBSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-ALBSecurityGroup"
  APPSecurityGroup:
    Value: !Ref APPSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-APPSecurityGroup"
  DBSecurityGroup:
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-DBSecurityGroup"
